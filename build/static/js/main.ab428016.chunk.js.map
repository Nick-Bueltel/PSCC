{"version":3,"sources":["utils/raceService.js","components/forms/Race.js","utils/classService.js","components/forms/Class.js","Pages/admin.js","Pages/home.js","Pages/navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","raceService","index","fetch","method","headers","then","res","json","create","race","options","Content-Type","body","JSON","stringify","Component","classService","Class","CreateClassForm","state","playerClassName","ablRecharge1","ablRecharge2","startingWealth","statBonus1","statBonus1Amount","statBonus2","statBonus2Amount","proficiency1","subClass1","subClass2","abilities","purchaseRQ","handleChange","e","_this","setState","Object","defineProperty","target","name","value","handleSubmit","_callee","regenerator_default","a","wrap","_context","prev","next","preventDefault","props","history","push","t0","stop","react_default","createElement","Form","onSubmit","this","Field","type","onChange","Checkbox","Button","Admin","Fragment","className","Home","NavBar","react_router_dom","Menu","Item","to","react_router","exact","path","component","App","rel","href","navbar","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab428016.chunk.js","sourcesContent":["const BASE_URL = '/api/races/';\n\nexport default {\n  index,\n  create\n};\n\nfunction index() {\n  const options = {\n    method: 'GET',\n    headers: {\n      \n    }\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction create(race) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n     \n    },\n    body: JSON.stringify(race)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n","import React from 'react'\nimport {Component} from 'react'\nimport {Button, Checkbox, Form} from 'semantic-ui-react'\nimport raceService from '../../utils/raceService';\n\n\n\nclass CreateRaceForm extends Component{\n    state = {\n        raceName : \"\",\n        natArmor : null, \n        raceHealth : null,\n        raceSize : \"\",\n        raceVision: \"\", \n        raceSpeed : null,\n        raceCES : null, \n        racePC: \"\", \n        raceLanguages : \"\",\n        raceReligion : \"\", \n        raceBonusName : \"\", \n        raceBonusAmount : null,\n        raceBonusStat : \"\",\n        racePurchase : false,\n    }\n   \n\n    handleChange = (e) => {\n         \n         this.setState({\n\n           [e.target.name]: e.target.value\n         });\n   }\n    \n       handleSubmit = async (e) => {\n         e.preventDefault();\n         try {\n           await raceService.create(this.state);\n  \n \n          this.props.history.push('/');\n         } catch (err) {\n         }\n        }   \n\n    \n    render(){\n        return(\n<div>\n    <Form onSubmit={this.handleSubmit} >\n        <Form.Field>\n        <label>Race Name </label>\n        <input name=\"raceName\" type=\"Text\" onChange={this.handleChange}/>\n        </Form.Field>\n        \n        <Form.Field>\n        <label>Natural Armor </label>\n        <input name=\"natArmor\" type=\"Number\" onChange={this.handleChange}/>\n        </Form.Field>\n        \n        <Form.Field>\n        <label>Health </label>\n        <input name=\"raceHealth\" type=\"Number\" onChange={this.handleChange}/>\n        </Form.Field>\n        \n        <Form.Field>\n        <label>Size </label>\n        <select name=\"raceSize\" onChange={this.handleChange}>\n            <option value=\"small\">Small</option>\n            <option value=\"Medium\">Medium</option>\n            <option value=\"Large\">Large</option>\n        </select>\n        </Form.Field>\n        \n        <Form.Field>\n        <label>Vision</label>\n        <input name=\"raceVision\" type=\"Text\" onChange={this.handleChange}/>\n        </Form.Field>\n        \n        <Form.Field>\n        <label>Speed</label>\n        <input name=\"raceSpeed\" type=\"Number\" onChange={this.handleChange}/>\n        </Form.Field>\n        \n        <Form.Field>\n        <label>Cyber Enhancement Slots</label>\n        <input name=\"raceCES\" type=\"Number\" onChange={this.handleChange}/>\n        </Form.Field>\n        \n        <Form.Field>\n        <label>Preferred Classes</label>\n        <input name=\"racePC\" type=\"Text\" onChange={this.handleChange}/>\n        </Form.Field>\n        \n        <Form.Field>\n        <label>Languages </label>\n        <input name=\"raceLanguages\" type=\"Text\" onChange={this.handleChange}/>\n        </Form.Field>\n        \n        <Form.Field>\n        <label>Religions</label>\n        <input name=\"raceReligion\" type=\"Text\" onChange={this.handleChange}/>\n        </Form.Field>\n        \n        <Form.Field>\n        <label>Race Specific Bonus Name</label>\n        <input type=\"Text\" name=\"raceBonusName\" onChange={this.handleChange}/>\n        </Form.Field>\n        \n        <Form.Field>\n        <label> Race Specific Bonus Amount</label>\n        <input type=\"Number\" name=\"raceBonusAmount\" onChange={this.handleChange}/>\n        </Form.Field>\n\n        <Form.Field>\n        <label> Race Bonus Stat</label>\n        <select name=\"raceBonusStat\" onChange={this.handleChange}>Stat\n            <option value=\"str\">str</option>\n            <option value=\"dex\">dex</option>\n            <option value=\"con\">con</option>\n            <option value=\"int\">int</option>\n            <option value=\"wis\">wis</option>\n            <option value=\"cha\">cha</option>\n        </select>\n        </Form.Field>\n\n\n        \n        <Form.Field>\n        <label>Purchase Required? </label>\n        <Checkbox name=\"racePurchase\" onChange={this.handleChange}/>\n        </Form.Field>\n        \n        <Button type=\"submit\"> Submit </Button>\n\n    </Form>        \n    \n</div>\n        )\n    }\n}\n\n\n\nexport default CreateRaceForm\n\n    ","const BASE_URL = '/api/classes/';\n\nexport default {\n  index,\n  create\n};\n\nfunction index() {\n  const options = {\n    method: 'GET',\n    headers: {\n      \n    }\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction create(Class) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n     \n    },\n    body: JSON.stringify(Class)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n","\nimport React from 'react'\nimport {Component} from 'react'\nimport {Button, Checkbox, Form} from 'semantic-ui-react'\nimport classService from '../../utils/classService'\n\nclass CreateClassForm extends Component{\n   state = {\n    playerClassName: \"\",\n    ablRecharge1: \"\",\n    ablRecharge2: \"\",\n    startingWealth: \"\",\n    statBonus1 : \"\",\n    statBonus1Amount: null,\n    statBonus2 : \"\",\n    statBonus2Amount: null,\n    proficiency1 : false,\n    subClass1 : {},\n    subClass2 : {},\n    abilities : {},\n    purchaseRQ : false,\n   }\n   \n   \n    handleChange = (e) => {\n         \n        this.setState({\n\n          [e.target.name]: e.target.value\n        });\n  }\n   \n      handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n          await classService.create(this.state);\n \n\n         this.props.history.push('/');\n        } catch (err) {\n        }\n       }   \n\n    \n    render(){\n        return(\n<div>\n<Form onSubmit={this.handleSubmit}>\n    <Form.Field>\n        <label>Class Name </label>\n        <input type=\"Text\" name=\"playerClassName\" onChange={this.handleChange} />\n    </Form.Field>\n    \n    <Form.Field>\n        <label>Ability Recharge</label>\n        <select name=\"ablRecharge1\" onChange={this.handleChange}>\n            <option value=\"str\">str</option>\n            <option value=\"dex\">dex</option>\n            <option value=\"con\">con</option>\n            <option value=\"int\">int</option>\n            <option value=\"wis\">wis</option>\n            <option value=\"cha\">cha</option>\n\n        </select>\n        +\n        <select name=\"ablRecharge2\" onChange={this.handleChange}>\n            <option value=\"str\">str</option>\n            <option value=\"dex\">dex</option>\n            <option value=\"con\">con</option>\n            <option value=\"int\">int</option>\n            <option value=\"wis\">wis</option>\n            <option value=\"cha\">cha</option>\n        </select>\n    </Form.Field>\n    \n    <Form.Field>\n        <label>Starting Wealth</label>\n        <input type=\"Text\" name=\"startingWealth\" onChange={this.handleChange}/>\n    </Form.Field>\n    \n    <Form.Field>\n        <label> Stat Bonus 1</label>\n        <select name=\"statBonus1\" onChange={this.handleChange}>\n            <option value=\"str\">str</option>\n            <option value=\"dex\">dex</option>\n            <option value=\"con\">con</option>\n            <option value=\"int\">int</option>\n            <option value=\"wis\">wis</option>\n            <option value=\"cha\">cha</option>\n        </select>\n    </Form.Field>\n    \n    <Form.Field>\n        <label> Stats Bonus 1 Amount</label>\n        <input name=\"statBonus1Amount\" type=\"Number\" onChange={this.handleChange} />\n    </Form.Field>\n    \n    <Form.Field>\n        <label> Stat Bonus 2</label>\n        <select name=\"statBonus2\" onChange={this.handleChange}>\n            <option value=\"str\">str</option>\n            <option value=\"dex\">dex</option>\n            <option value=\"con\">con</option>\n            <option value=\"int\">int</option>\n            <option value=\"wis\">wis</option>\n            <option value=\"cha\">cha</option>\n        </select>\n    </Form.Field>\n    \n    <Form.Field>\n        <label> Stats Bonus 2 Amount</label>\n        <input name=\"statBonus2Amount\" type=\"Number\" onChange={this.handleChange}/>\n    </Form.Field>\n    \n    <Form.Field>\n        <label>Proficiencies </label>\n        <label>test</label>\n        <Checkbox name=\"proficiency1\" onChange={this.handleChange}/>\n    </Form.Field>\n    \n    <Form.Field>\n        <label>Abilities</label>\n\n\n    </Form.Field>\n\n    <Form.Field>\n        <label>Sub Class 1 Name</label>\n        <input name=\"subClass1\" type=\"Text\" onChange={this.handleChange}/>\n    </Form.Field>\n        <Form.Field>\n            <label> Sub Class  1 Description </label>\n            <input name='subClass1.subDescription' type=\"Text\" onChange={this.handleChange} />\n        </Form.Field>\n        <Form.Field>\n            <label> Sub Class  1 Ability </label>\n            <input name='subClass1.subDescription' type=\"Text\" onChange={this.handleChange} />\n        </Form.Field>\n    \n\n\n    {/* <Form.Field>\n        <label>Sub Class 1 Name</label>\n        <input name=\"subClass1\" type=\"Text\" onChange={this.handleChange}/>\n    </Form.Field> */}\n    \n    <Button type=\"submit\"> Submit </Button>\n\n\n\n</Form>    \n</div>\n        )\n    }\n}\n\n\n\nexport default CreateClassForm\n\n    ","import React from 'react';\n\nimport {Component} from 'react'\n\nimport CreateRaceForm from '../components/forms/Race';\nimport CreateClassForm from '../components/forms/Class'\n\nclass Admin extends Component{\n\n\n    \n    render(){\n        return(      \n<React.Fragment>\n            {/* <h1>Admin Panel</h1>\n            <h2>Race Form</h2>\n            <div className=\"raceForm\">\n                <CreateRaceForm/> */}\n            {/* </div> */}\n            <h2>Class Form</h2>\n            <div className=\"classForm\">\n                <CreateClassForm/>\n            </div>\n\n</React.Fragment>\n\n        )\n    }\n}\n\nexport default Admin\n","import React, {Component} from 'react'\n\nclass Home extends Component{\n    render(){\n        return(\n            <div>\n                <h2>test</h2>\n                <p>lorem text yo</p>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React from 'react';\nimport {NavLink} from 'react-router-dom'\nimport {Menu} from 'semantic-ui-react'\nimport {Component} from 'react'\nimport {HashRouter, Route} from 'react-router-dom'\n\nimport Admin from './admin'\nimport Home from './home'\n\n\nclass NavBar extends Component {\n    render() {\n      return (\n<HashRouter>       \n<React.Fragment>\n    <div className=\"NavBar\">\n        <Menu>\n            <Menu.Item>\n                <NavLink to=\"/\">Home</NavLink>\n            </Menu.Item>\n            <Menu.Item>\n                <NavLink to=\"/admin\">Admin</NavLink>\n            </Menu.Item>   \n        </Menu>\n    </div>\n    <div className=\"content\">\n        <Route exact path=\"/\" component ={Home}/>\n        <Route exact path=\"/admin\" component ={Admin}/>\n\n\n    </div>\n</React.Fragment>\n</HashRouter>   \n      );\n    }\n  }\n   \n  export default NavBar;","import React from 'react'\nimport './App.css';\nimport NavBar from '../src/Pages/navbar'\n\n\nfunction App() {\n  return (\n  <div className=\"App\">\n    <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n    <NavBar></NavBar>\n\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}